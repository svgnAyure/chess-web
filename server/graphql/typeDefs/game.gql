type Game {
  id: ID!
  fen: String!
  startTime: String!
  increment: String!
  status: String!
  legalMoves: [Move!]!
  moveHistory: [String!]!
  gameStatus: GameStatus!
  playerInfo: PlayerInfo!
  keySquares: KeySquares!
}

type GameStatus {
  isFinished: Boolean!
  statusText: String!
}

type PlayerInfo {
  myTurn: Boolean!
  myColour: String
  whiteTimeLeft: String!
  blackTimeLeft: String!
}

type KeySquares {
  checkSquare: String
  lastMove: [String!]
}

type Query {
  getGame(id: ID!): Game
}

type Mutation {
  createGame(startTime: Int!, increment: Int!, colour: String!): String!
  joinGame(id: ID!): Boolean!
}

type Subscription {
  gameUpdated(id: ID!): Game!
}
